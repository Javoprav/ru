''' –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –†–∞–Ω–¥–æ–º'''

import random


"""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∑–∞–ø—É—Å–∫"""

print('–°–µ–≥–æ–¥–Ω—è –º—ã –ø–æ—Ç—Ä–µ–Ω–∏—Ä—É–µ–º—Å—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞—Ç—å –º–æ—Ä–∑—è–Ω–∫—É. \n–ù–∞–∂–º–∏—Ç–µ Enter –∏ –Ω–∞—á–Ω–µ–º')
user_input_enter = input()
if user_input_enter == '':
    print('–ù–∞—á–∏–Ω–∞–µ–º!')
else:
    print('–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã!')
    quit()


"""–≤—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""

answers = []

def print_statistics(answers):
    total_tasks = 5
    answered_correctly = 0
    answered_incorrectly = 0
    for answer in answers:
        if answer == True:
            answered_correctly += 1
        else:
            answered_incorrectly += 1

    print(f'–í—Å–µ–≥–æ –∑–∞–¥–∞—á–µ–∫: {total_tasks}\n–û—Ç–≤–µ—á–µ–Ω–æ –≤–µ—Ä–Ω–æ: {answered_correctly} \n–û—Ç–≤–µ—á–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ: {answered_incorrectly}')


"""–°–ª–æ–≤–∞—Ä—å –ú–æ—Ä–∑–µ"""
morse_dict = {
  "0": "-----",
  "1": ".----",
  "2": "..---",
  "3": "...--",
  "4": "....-",
  "5": ".....",
  "6": "-....",
  "7": "--...",
  "8": "---..",
  "9": "----.",
  "a": ".-",
  "b": "-...",
  "c": "-.-.",
  "d": "-..",
  "e": ".",
  "f": "..-.",
  "g": "--.",
  "h": "....",
  "i": "..",
  "j": ".---",
  "k": "-.-",
  "l": ".-..",
  "m": "--",
  "n": "-.",
  "o": "---",
  "p": ".--.",
  "q": "--.-",
  "r": ".-.",
  "s": "...",
  "t": "-",
  "u": "..-",
  "v": "...-",
  "w": ".--",
  "x": "-..-",
  "y": "-.--",
  "z": "--..",
  ".": ".-.-.-",
  ",": "--..--",
  "?": "..--..",
  "!": "-.-.--",
  "-": "-....-",
  "/": "-..-.",
  "@": ".--.-.",
  "(": "-.--.",
  ")": "-.--.-"
}

"""–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å–ª–æ–≤ –ú–æ—Ä–∑–µ"""

def morse_encode(word):
    translation = ''
    for letters in word:
        if letters in morse_dict:
            translation += morse_dict[letters] + ' '
    return translation

    # –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    '''translation = []
    for letters in word:
        translation.append(letters)
    return ' '.join(translation)'''

    # —Ç—Ä–µ—Ç–∏–π –≤–∞—Ä–∏–Ω–∞—Ç
    '''return ' '.join([morse_dict[letters] for letters in word])'''


"""–°–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –¥–ª—è –∏–≥—Ä—ã"""

list_words = ['snake', 'little', 'code', 'bit', 'soul']
def get_word():
    items = random.sample(list_words, 1)
    result = ''.join(items)
    return result


"""–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏"""

game_cycle = 0
while game_cycle < 5:
    user_response_1 = get_word()
    user_response_1_morse = morse_encode(user_response_1)
    print(f"–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ: {user_response_1_morse}")
    user_answer_1 = input().lower()
    if user_answer_1 == user_response_1:
        print('–û—Ç–≤–µ—Ç –≤–µ—Ä–Ω—ã–π!')
        answers.append(True)
        game_cycle += 1
    else:
        print('–û—Ç–≤–µ—Ç –Ω–µ –≤–µ—Ä–Ω—ã–π!')
        answers.append(False)
        game_cycle += 1

"""–í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""

print_statistics(answers)



'''–°–µ–º–µ–Ω –î—É—à–∫–∏–Ω
20.11.22 12:32
–ü—Ä–∏–≤–µ—Ç, –ú–∞–∫—Å–∏–º!
–•–æ—Ä–æ—à–æ —Ä–∞–∑–æ–±—Ä–∞–ª—Å—è –≤ —Ç–µ–º–µ, –º–æ–ª–æ–¥–µ—Ü)
–ï—Å—Ç—å –ø–∞—Ä–∞ –ø—Ä–∏–¥–∏—Ä–æ–∫:

1) –ü—Ä–∏–≤–æ–¥–∏—Ç—å –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, —Ç–∞–∫ —É –Ω–µ–≥–æ –±—É–¥–µ—Ç –º–µ–Ω—å—à–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞ –æ—à–∏–±–∫—É)

user_input = input().lower()
2) –°—Ä–∞–≤–Ω–∏–≤–∞—Ç—å bool —Ç–∏–ø—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —á–µ—Ä–µ–∑ is, –∏–ª–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É —Å–ø–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏—é count()

if ans is True:
  pass
3) –ü—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–¥–∞, –ª—É—á—à–µ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ç–∏–ª—è

–∏–º–ø–æ—Ä—Ç—ã
–∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
—Ñ—É–Ω–∫—Ü–∏–∏
–≤—ã–ø–æ–ª–Ω—è–µ–º—ã–π –∫–æ–¥
4) –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –ª—É—á—à–µ —É–¥–∞–ª—è—Ç—å
–í –æ—Å—Ç–∞–ª—å–Ω–æ –≤—Å—ë —Ö–æ—Ä–æ—à–æ, —Ä–∞–±–æ—Ç–∞ –∑–∞—á—Ç–µ–Ω–∞ÔªøüòâÔªø'''